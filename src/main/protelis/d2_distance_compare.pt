module performance

import java.lang.Math.*
import utils
import gradients


def trueDist() {
    self.distanceTo(if (self.getCurrentTime() < 300) {0} else {1})
}


let batchFreq = 10;
let id = self.getDeviceUID().getId();
let sourceId = if (self.getCurrentTime() < 300) {0} else {1};
let source = if (id == sourceId) {0} else {Infinity};
let dspace = env.get("dspace");
let dtime = env.get("dtime");
let v = if (dtime==0) {0.461} else {0.889} + dspace/6;

env.put("truedist", trueDist());
env.put("round", 	rep (x<-0) {x+1});
env.put("target", ifClose(() -> {cropRectangle(self.getCoordinates()+randVector(dspace), [0,0], [50,2])}, 0.05));

reporter("classic",	STD(source),							trueDist, batchFreq);
reporter("flex",	FLEX(source, 0.1, 10, 0.2, 1),			trueDist, batchFreq);
reporter("crf",		CRF(source, 1, 1, 1/6, 0, 1),			trueDist, batchFreq);
reporter("bis50", 	BIS(source, 1, 1, v*0.5, 0, 1),			trueDist, batchFreq);
reporter("bisflex50",BIS(source, 1, 1, v*0.5, 0.1, 10),		trueDist, batchFreq);
reporter("bis90", 	BIS(source, 1, 1, v*0.9, 0, 1),			trueDist, batchFreq);
reporter("bisflex90",BIS(source, 1, 1, v*0.9, 0.1, 10),		trueDist, batchFreq);
