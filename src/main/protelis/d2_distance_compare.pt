module d2_distance_compare

import java.lang.Math.*
import utils
import algorithm


def trueDist() {
    self.distanceTo(if (self.getCurrentTime() < 300) {0} else {1})
}


let batchFreq = 10;
let id = self.getDeviceUID().getId();
let sourceId = if (self.getCurrentTime() % 300 < 150 ) { 0 } else { 1 };
let source = id == sourceId;
let dspace = env.get("dspace");
let dtime = env.get("dtime");
let v = if (dtime==0) {0.461} else {0.889} + dspace/6;

env.put("truedist", trueDist());
env.put("round", 	rep (x<-0) {x+1});
env.put("target", ifClose(() -> {cropRectangle(self.getCoordinates()+randVector(dspace), [0,0], [50,2])}, 0.05));
env.put("source", source);
env.put("classic",	G_STD(source));
env.put("bis", 	G_BIS(source, 1, 1));
