module d4_collection_compare

import utils
import algorithm

// Compute distance estimations.
let source = self.getDeviceUID().getId() == 0;
let distance = G_STD(source);
env.put("source", source);

// Determines random targets for devices.
let dspace = env.get("dspace");
rectangleWalkRange([0,0], [2000,200], dspace, 1);

// Picks semi-random constant value for each device.
let base = rep(old <- self.getDeviceUID().getId() + 100 - self.distanceTo(0)/20) {old};
env.put("DEBUG", base);

// Computes maximum of time-decaying values (through single-path and multi-path algorithms).
let val = base - self.getCurrentTime();
env.put("sp", C_SP(distance, val));
env.put("mp", C_MP(distance, val));
